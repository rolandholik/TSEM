This file contains descriptions of output generated by the TSEM
control plane files and the role of the only write-only file in the
control plane.

It is highly recommended that the following document be read in order
to fully understand the rationale and functioning of these files:

Documentation/admin-guide/LSM/tsem.rst

In addition to creating namespaces the control plane files output
security event descriptions that are encoded in JSON format.  The
referenced document contains a description of the JSON encoding syntax
that is used.

What:		/sys/kernel/security/tsem
Date:		March 2024
Contact:	Greg Wettstein <greg@enjellic.com>
Description:
		The /sys/kernel/security/tsem directory contains files
		and directories that implement the control plane for
		the Trusted Security Event Modeling (TSEM) LSM.

		The files in this directory hierarchy, with the
		exception of the aggregate file, when read, reflect
		the values for the security modeling namespace that
		the process reading the files is operating in.

What:		/sys/kernel/security/tsem/id
Date:		March 2024
Contact:	Greg Wettstein <greg@enjellic.com>
Description:
		The id file outputs the ASCII base 10 representation
		of the security modeling namespace that the reading
		process is operating in.

		The root security modeling namespace has a value of
		zero, a non-zero value indicates a modeling namespace
		subordinate to the root model.

		Each externally modeled security namespace will have a
		file, with this id number, created in the
		/sys/kernel/security/tsem/external_tma that is
		documented below.

What:		/sys/kernel/security/tsem/aggregate
Date:		March 2024
Contact:	Greg Wettstein <greg@enjellic.com>
Description:	
		The aggregate file contains the ASCII base 16
		representation of the Trusted Platform Module (TPM)
		based hardware aggregate measurement.  The hardware
		aggregate measurement is the linear extension sum,
		using the digest function chosen for the root modeling
		namespace, of PCR registers 0 through 8

		The hardware aggregate measurement is a common concept
		in trusted systems and is used to verify the integrity
		and known good state of the hardware environment
		leading up to the boot of the operating system.

		The size of the measurement is equal in length to the
		ASCII Base16 representation of the cryptographic
		digest function being used for the root security
		modeling namespace.  For example, if the default
		sha256 digest function is being used, the aggregate
		measurement will be 64 ASCII hexadecimal characters.

		On a platform without a TPM this value will be all
		ASCII 0 values.

What:		/sys/kernel/security/tsem/control
Date:		March 2024
Contact:	Greg Wettstein <greg@enjellic.com>
Description:
		The control file is the only writable file in the
		filesystem and is used by trust orchestrator's to
		configure and control the behavior of the TSEM
		implementation.

		The following keyword and arguments are recognized:

		internal
			The internal keyword causes an internally
			modeled namespace to be created for the
			calling process.

		external
			The external keyword causes an externally
			modeled namespace to be created for the
			calling process.

		A modeling namespace created by either of these
		directives accepts the following key=value pairs that
		configure the namespace:

		nsref=initial|current
			The nsref key specifies the namespace that is
			to be referenced when determining the UID/GID
			values used to characterize a COE or CELL
			mapping.

			The initial keyword specifies that the initial
			user namespace is to be used.  The current
			keyword specifies that the user namespace of
			the process that is invoking a security event
			handler is used.

			The default is to use the initial user
			namespace.

		digest=digestname
			The digest key value is used to specify the
			cryptographic hash function that is to be used
			for the generation of the security state
			coefficients for the LSM events being modeled.

			The digestname value is the name used by the
			Linux kernel cryptographic API to identify the
			hash function.  Examples would include;
			sha256, sha3-256, sm3 etc.  The source files
			for the various cryptographic hash functions in
			the crypto directory of the kernel source has
			the names for hash functions implemented in
			the kernel.

			The sha256 hash function is the default
			function for the root modeling namespace.
			This can be modified by the tsem_digest
			command-line parameter.

			A hash function, used by the root modeling
			namespace, must be built into the kernel.

		cache=NN
			The cache key specifies the size of the caches
			to be used for holding pointers to structures
			used for the modeling or export of security
			events that are called while the invoking
			process is in atomic context.

			The value NN is the ASCII base 10
			representation of the number of entries in the
			cache.

			By default, the root modeling namespace and an
			externally modeled namespace will have 96
			entries.  An internally modeled namespace will
			have 16 entries.

		key=HEXID
			The key argument is used to specify the
			authentication key that will be used by a
			trust orchestrator to authenticate trust
			control requests to a process running in the
			security modeling namespace.

			The HEXID value is the ASCII base16 encoded
			representation of the key that is to be used.
			The length of this key, in binary, must be
			equal to the size of the digest produced by
			the cryptographic hash function that is being
			used in the security modeling namespace.

		enforce
			The enforce keyword causes the modeling
			namespace of the process to enter enforcing
			mode.  In this mode, a value of -EPERM will be
			returned for a security event coefficient that
			does not map into the current set of allowed
			coefficients for the security model being
			implemented in the namespace.

		seal
			The seal keyword causes the security model
			being implemented for the namespace to be
			placed in a sealed state.  In this state, the
			current set of security coefficients is
			considered to be the only set of valid
			coefficients for the model.  Any subsequent
			events that map to a coefficient not in the
			current model will be considered a violation
			of the model.

		trusted pid=PID key=HEXID
			The trusted keyword is used by a trust
			orchestrator to specify that a process being
			woken up after model evaluation of a security
			event should be allowed to run in trusted
			status.

			The pid argument is used to locate the process
			that is sleeping on the modeling event.

			The HEXID argument is the authentication key
			that was configured by a trust orchestrator
			for the namespace at the time of its creation.

		untrusted pid=PID key=HEXID
			The untrusted keyword is used by a trust
			orchestrator to specify that a process being
			woken up after model evaluation should be
			placed in untrusted status.

			The pid argument is used to locate the process
			that is sleeping on the modeling event.

			The HEXID argument is the authentication key
			that was configured by a trust orchestrator
			for the namespace at the time of its creation.

		state value=HEXID
			The state keyword is used to indicate that the
			security state coefficient, identified by the
			ASCII base 16 encoded value specified by HEXID,
			should be loaded into the current security
			model as a valid security event coefficient.

			The HEXID value will be the length of the
			digest value of the cryptographic hash
			function specified for the security modeling
			namespace.

		pseudonym value=HEXID
			The pseudonym keyword is used to indicate that
			the pathname, identified by the ASCII base 16
			encoded value HEXID, should be designated to
			return a constant digest value for the
			contents of the file named by the pseudonym.

			The HEXID value is computed with the following
			function:

			HEXID = HF(PATHNAME_LENGTH || PATHNAME)

			Where HF is the cryptographic hash function
			that has been designated for use by the
			security modeling namespace and || implies
			concatenation of the byte stream fed to the
			hash function.

		base value=HEXID
			The base keyword is used to indicate that the
			ASCII base 16 encoded value HEXID should be
			registered as the value used to generate
			security state coefficients for the model
			implemented in the modeling namespace.

			The binary length of the value specified by
			HEXID must match the digest size of the
			cryptographic hash function specified for use
			in the security modeling namespace.

			A model specific base value is designed to be
			used as a 'freshness' nonce, similar to an
			attestation nonce, to prove that a model state
			value or measurement is current and not being
			replayed.

What:		/sys/kernel/security/tsem/internal_tma
Date:		March 2024
Contact:	Greg Wettstein <greg@enjellic.com>
Description:
		This directory will contain directories that will be
		used to hold files that surface model parameters for
		Trusted Modeling Agents (TMA's) for internally modeled
		security namespaces.

		There is currently only one internal TMA that is
		surfaced through the following directory:

		/sys/kernel/security/tsem/internal_tma/model0

		The subsequent descriptions for the files implemented
		in this directory will use ROOTDIR to represent the
		above directory for space conservation purposes.

What:		ROOTDIR/measurement
Date:		March 2024
Contact:	Greg Wettstein <greg@enjellic.com>
Description:
		The measurement file contains the ASCII base 16
		representation of the time dependent linear extension
		value of all the security state coefficients in the
		model implemented by the namespace of the calling
		process.

		This value is similar in concept to measurement values
		generated by TPM PCR's.  In the case of TSEM, it can
		be used to validate the order integrity of the
		security state coefficients output in the
		trajectory_coefficients file documented below.
		
What:		ROOTDIR/state
Date:		March 2024
Contact:	Greg Wettstein <greg@enjellic.com>
Description:
		The state file contains the ASCII base 16
		representation of the functional value of a security
		modeling namespace.

		The state value is a time independent representation
		of the measurement of a security model.  This value is
		designed to be a single value that represents whether
		or not a workload has deviated from a defined set of
		known good behaviors.

What:		ROOTDIR/trajectory
Date:		March 2024
Contact:	Greg Wettstein <greg@enjellic.com>
Description:
		The trajectory file contains a description of the
		security events that have occurred in a security
		modeling namespace

		Each entry in this file represents a single security
		event and consists of a JSON encoded record with key
		values that define the characteristics of the event.

		Each line in a trajectory, or forensics, file will
		have three primary key values that label the following
		JSON structures:

		event

		COE

		CELL definition (multiple key names)

		The structure associated with the "event" label
		describes the security event that occurred.

		The structure associated with the "COE" label contains
		a description of the context-of-execution that is
		calling a security event handler.

		The "CELL definition" is represents a collection of
		labels that describe a security event that was
		called.  The key names have been chosen to match the
		function names of the LSM event handlers.
		
		The contents of the structure attached to the CELL
		definition label is the JSON encoding of the security
		relevant parameters associated with the event.

		Examples and descriptions of the JSON structures are
		provided in the tsem reference documentation described
		at the beginning of this document.
		
What:		ROOTDIR/trajectory_coefficients
Date:		March 2024
Contact:	Greg Wettstein <greg@enjellic.com>
Description:
		The trajectory_coefficients file will output the ASCII
		base16 representation of each security state
		coefficient that has been generated by the security
		modeling namespace of the calling process.

		The length of each point will be the ASCII
		representation of the size of the cryptographic hash
		function that has been specified for the model.

What:		ROOTDIR/trajectory_counts
Date:		March 2024
Contact:	Greg Wettstein <greg@enjellic.com>
Description:
		The trajectory_coefficients file will output the ASCII
		base10 representation of the number of times each
		security state coefficient has been generated by the
		security modeling namespace of the calling process.

What:		ROOTDIR/forensics
Date:		March 2024
Contact:	Greg Wettstein <greg@enjellic.com>
Description:
		The forensics file contains the descriptions of
		security events that are inconsistent with the
		security model that the security namespace is
		implementing.  Forensics events are generated after a
		security model is 'sealed' and the events represent
		security state coefficients that have not already been
		generated by the model.

		The format of lines in this file are identical to the
		output generated by the ROOTDIR/trajectory file
		that is documented above.

What:		ROOTDIR/forensics_coefficients
Date:		March 2024
Contact:	Greg Wettstein <greg@enjellic.com>
Description:
		The forensics_coefficients file will output the ASCII
		base16 representation of each security state
		coefficient that have been generated by forensics
		events in the security modeling namespace of the
		calling process.

		The length of each point will be the ASCII
		representation of the size of the cryptographic hash
		function that has been specified for the model.

What:		ROOTDIR/forensics_counts
Date:		March 2024
Contact:	Greg Wettstein <greg@enjellic.com>
Description:
		The forensics_counts file will output the ASCII base10
		representation of the number of times each security
		state coefficient, generated by a forensics event, has
		been generated by the security modeling namespace of
		the calling process.

What:		/sys/kernel/security/tsem/external_tma
Date:		March 2024
Contact:	Greg Wettstein <greg@enjellic.com>
Description:
		The external_tma is a container directory that hold a
		file that will be used to export JSON encoded security
		event descriptions for externally modeled security
		modeling namespaces.

		The files created in this directory will be named by
		the base 10 ASCII representation of the id value
		assigned to the security modeling namespace.  See the
		documentation for the /sys/kernel/security/tsem/id
		file in this documentation for more details on this
		value.

		This file will is a read-only file that can be polled
		by a userspace trust orchestrator implementation to
		obtain security events that are to be modeled by a
		Trusted Modeling Agent implementation associated with
		the trust orchestrator.

		Each exported event is a JSON encoded record
		describing an event that is to be externally
		processed.

		Each record will have an 'export' key that has a
		structure associated with it that has a 'type' key in
		it.  The 'type' key has an associated string value
		that defines the type of event being exported.

		The following type event values are supported:

		aggregate
			The rest of the export event description will
			contain a description of the hardware
			aggregate measurement of the platform that the
			security modeling namespace is running on.

			See the description of the ROOTDIR/aggregate
			file for information on the hardware aggregate
			value.

		async_event
			A type description of async is used to
			indicate that the security event described by
			the event was called by a process that was
			running in atomic context.
		
		event
			A type description of event contains a
			description of a security event that is
			waiting to have its trust status evaluated.

		log
			A type description of log indicates that the
			remainder of the event description describes
			an event where a process in untrusted status
			has called a TSEM security event handler.
